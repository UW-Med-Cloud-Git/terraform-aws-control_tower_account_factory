{
    "StartAt": "aft_account_provisioning_framework_persist_metadata",
    "States": {
        "aft_account_provisioning_framework_persist_metadata": {
            "Next": "aft_account_provisioning_framework_create_role",
            "Type": "Task",
            "Resource": "arn:${current_partition}:states:::lambda:invoke",
            "Parameters": {
                "FunctionName": "${persist_metadata_function_arn}",
                "Payload.$": "$"
            },
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "aft_account_provisioning_framework_notify_error"
                }
            ]
        },
        "aft_account_provisioning_framework_create_role": {
            "Next": "aft_account_provisioning_framework_tag_account",
            "Type": "Task",
            "Resource": "arn:${current_partition}:states:::lambda:invoke",
            "Parameters": {
                "FunctionName": "${create_role_function_arn}",
                "Payload.$": "$"
            },
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "aft_account_provisioning_framework_notify_error"
                }
            ]
        },
        "aft_account_provisioning_framework_tag_account": {
            "Next": "aft_account_provisioning_framework_account_metadata_ssm",
            "Type": "Task",
            "Resource": "arn:${current_partition}:states:::lambda:invoke",
            "Parameters": {
                "FunctionName": "${tag_account_function_arn}",
                "Payload.$": "$"
            },
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "aft_account_provisioning_framework_notify_error"
                }
            ]
        },
        "aft_account_provisioning_framework_account_metadata_ssm": {
            "Next": "aft_account_provisioning_framework_aft_features",
            "Type": "Task",
            "Resource": "arn:${current_partition}:states:::lambda:invoke",
            "Parameters": {
                "FunctionName": "${account_metadata_ssm_function_arn}",
                "Payload.$": "$"
            },
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "aft_account_provisioning_framework_notify_error"
                }
            ]
        },
        "aft_account_provisioning_framework_aft_features": {
            "Next": "aft_account_provisioning_customizations",
            "Type": "Task",
            "Resource": "arn:${current_partition}:states:::states:startExecution.sync:2",
            "Parameters": {
                "StateMachineArn": "${aft_features_sfn_arn}",
                "Input.$": "$"
            }
        },
        "aft_account_provisioning_customizations": {
            "Next": "run_create_pipeline?",
            "Type": "Task",
            "Resource": "arn:${current_partition}:states:::states:startExecution.sync:2",
            "Parameters": {
                "StateMachineArn": "${account_customizations_sfn_arn}",
                "Input.$": "$"
            },
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "run_create_pipeline?"
                }
            ]
        },
        "run_create_pipeline?": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.account_request.run_create_pipeline",
                    "BooleanEquals": true,
                    "Next": "aft_account_provisioning_framework_create_pipeline"
                }
            ],
            "Default": "aft_account_provisioning_framework_notify_success"
        },
        "aft_account_provisioning_framework_create_pipeline": {
            "Next": "aft_account_provisioning_framework_notify_success",
            "Type": "Task",
            "Resource": "arn:${current_partition}:states:::codebuild:startBuild.sync",
            "Parameters": {
                "ProjectName": "aft-create-pipeline",
                "EnvironmentVariablesOverride": [
                    {
                        "Name": "VENDED_ACCOUNT_ID",
                        "Type": "PLAINTEXT",
                        "Value.$": "$.account_request.account_id"
                    }
                ]
            },
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "aft_account_provisioning_framework_notify_error"
                }
            ]
        },
        "aft_account_provisioning_framework_notify_success": {
            "Type": "Task",
            "Resource": "arn:${current_partition}:states:::sns:publish",
            "Parameters": {
                "TopicArn": "${aft_notification_arn}",
                "Message.$": "$"
            },
            "End": true
        },
        "aft_account_provisioning_framework_notify_error": {
            "Type": "Task",
            "Resource": "arn:${current_partition}:states:::sns:publish",
            "Parameters": {
                "TopicArn": "${aft_failure_notification_arn}",
                "Message.$": "$.Cause"
            },
            "Next": "Failed"
        },
        "Failed": {
            "Type": "Fail"
        }
    }
}